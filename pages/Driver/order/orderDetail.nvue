<template>
	<view>
		<map id="map1" ref="map1" class="map" :style="{height:mapHeight}" :scale="scale" :longitude="longitude" :latitude="latitude"
		 :polyline="polyline" :markers="markers" :show-location="true">
		</map>
		<image @click="back" src="@/static/driver/back1.png" style="width: 120rpx;height: 120rpx;position: fixed;top: 50px;left: 1px;"></image>
		<view style="position: fixed;bottom: 50rpx;left: 0;right: 0;">
			<!-- 行程信息 -->
			<view style="width: 698rpx;height: 80rpx; background-color: #FFFFFF;margin-left: 28rpx; border-radius:20rpx; margin-top: 16rpx; padding: 20rpx;">
				<text style="width:140rpx;height:40rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx; margin-left: 16rpx;">{{taxiFormatState(state)}}</text>
			</view>
			<view style="width: 698rpx;padding-bottom: 30rpx; background-color: #FFFFFF;margin-left: 28rpx; border-radius:20rpx; margin-top: 16rpx;">
				<view>
					<text style="height:40rpx;font-size:36rpx;font-family:Source Han Sans SC;font-weight:500;color:#333333;line-height:36rpx; margin-top: 32rpx; margin-left: 36rpx;">订单信息</text>
				</view>
				<view style="margin-top: 20rpx;margin-left: 38rpx;display: flex;flex-direction: row;">
					<text style="width:120rpx;height:40rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">总里程：</text>
					<text style="width:168rpx;height:40rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">{{estimateDistance}}公里</text>
					<text style="width:120rpx;height:40rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx; margin-left: 40rpx;">总时长：</text>
					<text style="width:140rpx;height:40rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">{{waitTime}}分钟</text>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
	import $taxi from '@/common/Czc.js';
	import uniIcons from "@/components/uni-icons/uni-icons.vue";
	export default {
		components: {
			uniIcons,
		},
		data() {
			return {
				scale: 14,
				orderNumber:'',
				longitude: "118.600608", //地图中心点经度
				latitude: "24.889217", //地图中心点纬度
				points: [],
				polyline: [],
				markers: [],
				mapHeight: '',
				viewHeight: '',
				userInfo:'',
				waitTime:'',
				startLon:'',
				startLat:'',
				endLon:'',
				endLat:'',
				state:'',
				estimateDistance:'',
			}
		},
		onLoad(option) {
			let that = this;
			that.orderNumber = option.orderNumber;
			that.userInfo = uni.getStorageSync('userInfo') || '';
			if(that.userInfo == ''){
				that.showToast('请登录');
			}
			uni.getSystemInfo({
				//设置地图高度为可使用的高度
				success: function(res) {
					that.mapHeight = res.windowHeight + 'px';
					that.viewHeight = (res.windowHeight * 0.4) + 'px'
				}
			});
			that.getOrderDetail();
			that.getDirectionDriving();
		},
		onShow() {
			let that = this;
		},
		methods: {
			showToast: function(title, icon = 'none') {
				uni.showToast({
					title: title,
					icon: icon
				});
			},
			getOrderDetail:function(){
				let that = this;
				uni.request({
					url: $taxi.Interface.getOrderDetail.value,
					method: $taxi.Interface.getOrderDetail.method,
					data: {
						orderId: that.orderNumber,
					},
					success:function(res){
						if(res.data.code===200){
							that.state = res.data.data.state;
						}else {
							
						}
					},
					fail:function(res){
						//console.log(res);
						that.showToast('网络连接失败');
					},
				})
			},
			getDirectionDriving: function() {
				//路径规划
				var that = this;
				uni.request({
					url:$taxi.Interface.track.value,
					method: $taxi.Interface.track.method,
					data: {
						orderId:that.orderNumber
					},
					success: function(res) {
						let data = res.data.data;
						if(res.data.code===200){
							for (let i of data) {
								var obj = {
									longitude: i.lng,
									latitude: i.lat
								}
								that.points.push(obj);
							}
							var obj = {
								points: that.points,
								color: "#4BDD25",
								arrowLine: true,
								width: 5
							};
							that.polyline.push(obj);
						}
					},
					fail: function(res) {
						that.showToast('网络连接失败');
					}
				});
			},
			back: function() {
				var that = this;
				uni.navigateBack({});
			},
			mathTime:function(startTime , endTime){
				let start = startTime.getTime();
				let end = endTime.getTime();
				return  parseInt((end - start) / 1000 / 60);
			},
			taxiFormatState: function(state) {
				if (state === 'arrive') {
					return '已完成';
				} else if (state === 'received' || state === 'departure' || state === 'passenger' || state === 'setout') {
					return '进行中';
				} else if (state == 8) {
					return '已取消';
				} else {
					return '';
				}
			},
			taxiFormatOrderState:function(state){
				if(state === 'examine'){
					//调度员审核
					return '待审核'
				}else if(state === 'waiting'){
					//待接单
					return '待接单'
				}else if(state === 'received'){
					//已接单
					return '已接单'
				}else if(state === 'departure'){
					//到达出发地
					return '待上车'
				}else if(state === 'passenger'){
					//接到乘客
					return '进行中'
				}else if(state === 'setout'){
					//出发
					return '已出发' 
				}else if(state === 'arrive'){
					//到达
					return '已到达'
				}else if(state === 'refuse'){
					//拒接
					return '已拒接'
				}else if(state === 'fault'){
					//故障
					return '故障'
				}else if(state === 'fail'){
					//审核未通过
					return '未通过'
				}
			},
			
			setMarker: function(id, lon, lat, iconPath) {
				var width = 20;
				var height = 20;
				//描绘点的方法
				var that = this;
				var marker = new Object();
				//画终点经纬度
				marker = {
					id: id,
					latitude: lat,
					longitude: lon,
					iconPath: iconPath,
					width: width,
					height: height
				};
				var json = JSON.stringify(that.markers);
				var arr = JSON.parse(json);
				arr.push(marker);
				that.markers = arr;
			},
		}
	}
</script>

<style lang="scss">
	.map {
		width: 750rpx;
	}

	.popupBlock {
		width: 650rpx;
		padding: 30rpx;
		background-color: #FFFFFF;
		border-radius: 12rpx;
	}

	.popupTitle {
		margin-bottom: 50rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}

	.popupTitleFont {
		font-size: 38rpx;
		font-family: Source Han Sans SC;
		font-weight: 400;
		color: #333333;
	}

	.popupButtonChoose {
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		padding: 30rpx;
		background-color: #FFFFFF;
		border-color: #AAAAAA;
		border-width: 1rpx;
		border-radius: 12rpx;
	}

	.popupButtonChooseFont {
		font-size: 36rpx;
		font-family: Source Han Sans SC;
		font-weight: 400;
		color: #333333;
	}

	.popupButtonOk {
		margin-top: 50rpx;
		padding: 30rpx;
		background-color: #FC6A6C;
		box-shadow: 0px 7px 38px 8px rgba(216, 48, 75, 0.15);
		border-radius: 12rpx;
	}

	.popupButtonOkFont {
		font-size: 36rpx;
		font-family: Source Han Sans SC;
		font-weight: 400;
		color: #FFFFFF;
	}
</style>
