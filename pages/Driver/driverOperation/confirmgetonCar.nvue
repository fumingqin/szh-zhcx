<template>
	<view>
		<map id="map1" ref="map1" class="map" :style="{height:mapHeight}" :scale="scale" :longitude="longitude" :latitude="latitude"
		 :polyline="polyline" :markers="markers" :show-location="true">
		</map>
		<image @click="back" src="@/static/driver/back1.png" style="width: 120rpx;height: 120rpx;position: fixed;top: 50px;left: 1px;"></image>
		
		<view style="position: fixed;bottom: 110rpx;">
			<view style="margin-left: 25rpx;width: 700rpx;">
				<view style="flex-direction: row;justify-content: space-between;align-items: center;">
					<view>
						<!--一键报警-->
						<image src="@/static/driver/police.png" style="width: 120rpx;height: 120rpx;" @click="callPolice"></image>
					</view>
					<view>
						<!--导航-->
						<image v-if="state === 'passenger'" src="@/static/driver/navigate.png" style="width: 120rpx;height: 120rpx;" @click="toNavigation"></image>
					</view>
				</view>
			</view>
			<!-- 行程信息 -->
			<view style="width: 700rpx;background-color: #FFFFFF;margin-left: 25rpx; border-radius:20rpx;padding: 35rpx;">
				<view style="flex-direction: row;">
					<view style="display: flex;flex-direction: row;width:310rpx;">
						<text style="font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">预计里程:</text>
						<text style="margin-left: 10rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">{{formatExpectMileage(orderInfo.expectMileage)}}</text>
					</view>
					<view style="display: flex;flex-direction: row;width:310rpx;margin-left: 10rpx;">
						<text style="font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">预计时长:</text>
						<text style="margin-left: 10rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">{{formatExpectDuration(orderInfo.expectDuration)}}</text>
					</view>
				</view>
				<view style="margin-top: 20rpx;">
					<view style="flex-direction: row;">
						<text style="font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">起&emsp;&emsp;点:</text>
						<text style="margin-left: 10rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">{{orderInfo.startName}}</text>
					</view>
					<view style="flex-direction: row;margin-top: 20rpx;">
						<text style="font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">终&emsp;&emsp;点:</text>
						<text style="margin-left: 10rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">{{orderInfo.endName}}</text>
					</view>
				</view>
			</view>
			<!-- 联系电话 -->
			<view style="width: 700rpx;background-color: #FFFFFF;margin-left: 25rpx; border-radius:20rpx; padding: 35rpx;display: flex;flex-direction: row;margin-top: 20rpx;justify-content: space-between;align-items: center;">
				<view style="flex-direction: row;">
					<text style="font-size:30rpx;font-family:Source Han Sans SC;font-weight:300;color:rgba(51,51,51,1);line-height:36rpx;">乘客电话:</text>
					<text style="margin-left: 10rpx;font-size:30rpx;font-family:Source Han Sans SC;font-weight:300;color:rgba(51,51,51,1);line-height:36rpx;">{{orderInfo.tel}}</text>
				</view>
				<image style="width: 60rpx;height: 60rpx;" src="@/static/driver/phone.png" @click="call(orderInfo.tel)"></image>
			</view>
			<view>
				<button v-if="state === 'setout'" style="width: 700rpx;margin-top: 30rpx;background-color: #FC6A6C;border-color:#FC6A6C;color: #FFFFFF;margin-left: 25rpx; border-radius:20rpx;"
				 @longpress="confirmgeToOrigint">
					<text style="color: #FFFFFF;">长按确认到达出发地</text>
				</button>
				<button v-if="state === 'departure'" style="width: 700rpx;margin-top: 30rpx;background-color: #FC6A6C;border-color:#FC6A6C;color: #FFFFFF;margin-left: 25rpx; border-radius:20rpx;"
				 @longpress="confirmgetonCar">
					<text style="color: #FFFFFF;">长按确认乘客已上车</text>
				</button>
				<button v-if="state === 'passenger'" style="width: 700rpx;margin-top: 30rpx;background-color: #FC6A6C;border-color:#FC6A6C;color: #FFFFFF;margin-left: 25rpx; border-radius:20rpx;"
				 @longpress="confirmGetToDestination">
					<text style="color: #FFFFFF;">长按确认到达目的地</text>
				</button>
			</view>
		</view>
		
		<!--进行中-->
		<!-- <view  style="position: fixed;bottom: 110rpx; ">
			<view style="flex-direction: row;">
				<image src="@/static/driver/police.png" style="width: 120rpx;height: 120rpx;margin-left: 10rpx;" @click="callPolice"></image>
			</view>
			<view style="width: 700rpx;background-color: #FFFFFF;margin-left: 25rpx; border-radius:20rpx;padding: 35rpx;">
				<view style="flex-direction: row;">
					<view style="display: flex;flex-direction: row;width:310rpx;">
						<text style="font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">预计里程:</text>
						<text style="margin-left: 10rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">5公里</text>
					</view>
					<view style="display: flex;flex-direction: row;width:310rpx;margin-left: 10rpx;">
						<text style="font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">预计时长:</text>
						<text style="font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">30分钟</text>
					</view>
				</view>
				<view style="margin-top: 20rpx;">
					<view style="flex-direction: row;">
						<text style="font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">起&emsp;&emsp;点:</text>
						<text style="margin-left: 10rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">茶叶大厦</text>
					</view>
					<view style="flex-direction: row;margin-top: 20rpx;">
						<text style="font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">终&emsp;&emsp;点:</text>
						<text style="margin-left: 10rpx;font-size:30rpx;font-family:Source Han Sans SC;color:#666666;line-height:36rpx;">丰泽广场</text>
					</view>
				</view>
			</view>
			<view>
				<button style="width: 700rpx;margin-top: 30rpx;background-color: #FC6A6C;border-color:#FC6A6C;color: #FFFFFF;margin-left: 25rpx; border-radius:20rpx;"
				 @longpress="confirmGetToDestination">
					<text style="color: #FFFFFF;">长按确认到达目的地</text>
				</button>
			</view>
		</view> -->

		<uni-popup ref='callPolice' :animation='true' type='center' :maskClick='false'>
			<!--一键报警-->
			<view class="popupBlock" style="margin: 0 auto;">
				<view class="popupTitle">
					<view style="width: 72rpx;"></view>
					<text class="popupTitleFont">一键报警</text>
					<view style="width: 72rpx;text-align: right;">
						<uni-icons @click="cancle" color='#999999' size='24' type='closeempty'></uni-icons>
					</view>
				</view>
				<view>
					<!-- <picker @change='pickerChange' mode="selector" :value="pickerValue" :range='callPoliceArr' style="align-items: center;text-align: center;">
						<text class="popupTitleFont"  style="text-align: center;">{{alarmReason}}</text>
					</picker> -->
					<textarea maxlength="200" class="popupTitleFont borderTextArea" placeholder-style="font-size:30rpx;" style="margin-top: 20rpx;height: 200rpx;width: 550rpx;margin: 0 auto;" name='alarmRemark' v-model="alarmRemark" placeholder="请填写报警原因"></textarea>
					<button @click="sendCall" class="popupButtonOk">
						<text class="popupButtonOkFont">确定</text>
					</button>
				</view>
			</view>
		</uni-popup>
	</view>
</template>

<script>
	import $taxi from '@/common/Czc.js';
	import Map from '@/common/my-openMap/openMap.js';
	import uniPopup from "@/components/uni-popup/uni-popup.vue";
	import uniIcons from "@/components/uni-icons/uni-icons.vue";
	export default {
		components: {
			uniIcons,
			uniPopup
		},
		data() {
			return {
				scale: 14,
				longitude: "", //地图中心点经度
				latitude: "", //地图中心点纬度
				polyline: [],
				markers: [],
				mapHeight: '',
				viewHeight: '',
				orderInterval: '',//订单定时器
				directionInterval:'',
				callPoliceArr: [
					'堵车',
					'事故',
					'故障',
					'身体不适'
				],
				alarmReason: '堵车',//报警原因
				pickerValue: 0,
				alarmRemark: '',//报警备注
				driverId: '',
				orderNumber: '', //订单编号
				state: '',
				startLon: '',
				startLat: '',
				startAddress: '',
				endLon: '',
				endLat: '',
				endAddress: '',
				userInfo:null,
				orderInfo:{
					tel:'',//用户电话
					startLng:'',
					startLat:'',
					endLng:'',
					endLat:'',
					startName:'',//起点
					endName:'',//终点
					expectDuration:'',//预计时长
					expectMileage:''//预计里程
				},
			}
		},
		onLoad(option) {
			var that = this;
			that.orderNumber = option.orderNumber;
			var userInfo = uni.getStorageSync('userInfo') || '';
			if (userInfo) {
				that.userInfo = userInfo;
				that.driverId = userInfo.driverId;
			}
			uni.getSystemInfo({
				//设置地图高度为可使用的高度
				success: function(res) {
					that.mapHeight = res.windowHeight + 'px';
					that.viewHeight = (res.windowHeight * 0.4) + 'px'
				}
			});
			that.getOrderInfo();
			that.constantlyOrderInfo();
			that.getMyLocation();
			that.constantlyDirection();
		},
		onUnload() {
			let that = this;
			clearInterval(that.orderInterval);
			clearInterval(that.directionInterval);
		},
		methods: {
			getMyLocation:function(){
				let that = this;
				uni.getLocation({
					type:'gcj02',
					success:function(res){
						that.longitude = res.longitude;
						that.latitude = res.latitude;
					}
				})
			},
			
			//本页面统一调用此方法
			showToast:function(title,icon='none'){
				uni.showToast({
					title:title,
					icon:icon
				});
			},
			
			getOrder: function() {
				let that = this;
				//获取订单详情
				return new Promise((resolve, reject) => {
					uni.request({
						url: $taxi.Interface.getOrderDetail.value,
						method: $taxi.Interface.getOrderDetail.method,
						data: {
							orderId: that.orderNumber,
						},
						success: function(res) {
							let data = res.data.data;
							if (res.data.code===200) {
								that.state = data.state;
								that.orderInfo.tel = data.volunteer.tel;								that.orderInfo.startLng = data.line.startLng;								that.orderInfo.startLat = data.line.startLat;								that.orderInfo.endLng = data.line.endLng;								that.orderInfo.endLat = data.line.endLat;								that.orderInfo.startName = data.line.startName;								that.orderInfo.endName = data.line.endName;								that.orderInfo.expectDuration = data.line.expectDuration;								that.orderInfo.expectMileage = data.line.expectMileage;
								that.setMarker(1,data.line.startLng,data.line.startLat,'../../../static/driver/Start.png');
								that.setMarker(2,data.line.endLng,data.line.endLat,'../../../static/driver/End.png');
							}
							resolve(res);
						},
						fail: function(res) {
							reject(res);
							that.showToast('网络连接失败');
						}
					});
				});
			},

			//订单查询方法，第一次进入时调用。
			getOrderInfo: function() {
				let that = this;
				uni.showLoading({
					mask:true,
					title:'加载中'
				});
				that.getOrder().then(res => {
					uni.hideLoading();
					let data = res.data.data;
					if (res.data.code===200) {
						that.setMarker(1,data.line.startLng,data.line.startLat,'../../../static/driver/Start.png');
						that.setMarker(2,data.line.endLng,data.line.endLat,'../../../static/driver/End.png');
					}
				}).catch(rej =>{
					uni.hideLoading(); 
				});
			},
			
			constantlyOrderInfo:function(){
				//定时器获取订单信息
				let that = this;
				that.orderInterval = setInterval(function(){
					that.getOrder().then(res =>{
						uni.hideLoading();
						if (res.data.code===200) {
							if(res.data.data.state === 'arrive'){
								uni.redirectTo({
									url: '/pages/driver/driverOperation/orderComplete'
								});
							}
						}
					}).catch(rej => {
						uni.hideLoading();
					});
				},5000);
			},
			
			confirmgeToOrigint:function(){
				//长按确认到达上车点
				let that = this;
				uni.showLoading({
					mask:true,
					title:'加载中'
				});
				uni.request({
					url:$taxi.Interface.origin.value,
					method:$taxi.Interface.origin.method,
					data:{
						orderId:that.orderNumber
					},
					success:function(res){
						uni.hideLoading();
						let data = res.data.data;
						if(res.data.code===200){
							that.state = 'departure';
						} else {
							that.showToast(res.data.msg);
						}
					},
					fail:function(res){
						uni.hideLoading();
						that.showToast('网络连接失败');
					}
				});
			},
			
			confirmgetonCar: function() { 
				//长按确认乘客上车
				let that = this;
				uni.showLoading({
					mask:true,
					title:'加载中'
				});
				uni.request({
					url:$taxi.Interface.confirmBoarding.value,
					method:$taxi.Interface.confirmBoarding.method,
					data:{
						orderId:that.orderNumber
					},
					success:function(res){
						uni.hideLoading();
						let data = res.data.data;
						if(res.data.code===200 || res.data.msg === '订单状态错误，更改失败'){
							that.state = 'passenger';
						} else {
							that.showToast(res.data.msg);
						}
					},
					fail:function(res){
						uni.hideLoading();
						that.showToast('网络连接失败');
					}
				});
			},
		
			confirmGetToDestination: function() {
				//长按确认到达目的地
				let that = this;
				uni.showLoading({
					mask:true,
					title:'加载中'
				});
				uni.request({
					url:$taxi.Interface.terminus.value,
					method:$taxi.Interface.terminus.method,
					data:{
						orderId:that.orderNumber
					},
					success:function(res){
						uni.hideLoading();
						if(res.data.code===200 || res.data.msg === '订单状态错误，更改失败'){
							uni.redirectTo({
								url: '/pages/driver/driverOperation/orderComplete'
							});
						} else {
							that.showToast(res.data.msg);
						}
					},
					fail:function(res){
						uni.hideLoading();
						that.showToast('网络连接失败');
					}
				});
			},
		
			call: function(phoneNumber) {
				//呼叫乘客
				let that = this;
				uni.makePhoneCall({
					phoneNumber: phoneNumber
				});
			},

			//picker相关
			callPolice: function() {
				let that = this;
				that.$refs.callPolice.open();
			},
		
			cancle: function() {
				let that = this;
				that.$refs.callPolice.close();
				that.alarmRemark = '';
			},
	
			pickerChange: function(e) {
				let that = this;
				that.pickerValue = e.detail.value;
				that.alarmReason = that.callPoliceArr[e.detail.value];
			},
			
			sendCall: function() {
				let that = this;
				uni.showLoading({
					mask:true,
					title:'加载中'
				});
				console.log(that.orderNumber);
				if(that.alarmRemark === ''){
					that.showToast('请输入内容');
					return
				}
				uni.request({
					url:$taxi.Interface.callPolice.value,
					method:$taxi.Interface.callPolice.method,
					data:{
						callContent:that.alarmRemark,
						orderId:that.orderNumber,
					},
					success:function(res){
						console.log(res);
						uni.hideLoading();
						if(res.data.code===200){
							that.showToast('报警成功');
						}
						that.cancle();
					},
					fail:function(res){
						that.showToast('网络连接失败');
					}
				});
			},

			back: function() {
				var that = this;
				uni.navigateBack({});
			},
			
			setMarker: function(id, lon, lat, iconPath) {
				var that = this;
				that.markers = that.markers.filter(x => x.id !== id);
				var width = 20;
				var height = 20;
				//描绘点的方法
				var marker = new Object();
				//画终点经纬度
				marker = {
					id: id,
					latitude: lat,
					longitude: lon,
					iconPath: iconPath,
					width: width,
					height: height
				};
				that.markers.push(marker);
			},
			
			constantlyDirection:function(){
				let that = this;
				that.directionInterval = setInterval(function(){
					that.getDirectionDriving();
				},10000);
			},
			
			getDirectionDriving: function() {
				//路径规划
				var that = this;
				uni.request({
					url:$taxi.Interface.track.value,
					method: $taxi.Interface.track.method,
					data: {
						orderId:that.orderNumber
					},
					success: function(res) {
						console.log(11,res);
						let data = res.data.data;
						if(res.data.code===200){
							that.polyline = [];
							let points = [];
							for (let i of data) {
								var obj = {
									longitude: i.lng,
									latitude: i.lat
								}
								points.push(obj);
							}
							var obj = {
								points: points,
								color: "#4BDD25",
								arrowLine: true,
								width: 5
							};
							that.polyline.push(obj);
						}
					},
					fail: function(res) {
						that.showToast('网络连接失败');
					}
				});
			},
			
			formatExpectDuration:function(expectDuration){
				return parseInt(expectDuration) + '分钟'
			},
			
			formatExpectMileage:function(expectMileage){
				// var mileage = parseFloat(expectMileage);
				// var long = mileage / 1000;
				// if(long > 1){
				// 	return long.toFixed(1) + '公里';
				// }else{
				// 	return mileage + '米';
				// }
				return expectMileage + '公里';
			},
	
			toNavigation:function(){
				let that = this;
				let endLat = that.orderInfo.endLat;
				let endLng = that.orderInfo.endLng;
				let endName = that.orderInfo.endName;
				let type = 'gcj02';
				Map.openMap(parseFloat(endLat) ,parseFloat(endLng) , endName,type);
			},
		}
	}
</script>

<style lang="scss">
	.map {
		width: 750rpx;
	}

	.popupBlock {
		width: 650rpx;
		padding: 30rpx;
		background-color: #FFFFFF;
		border-radius: 12rpx;
	}

	.popupTitle {
		margin-bottom: 50rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}

	.popupTitleFont {
		font-size: 38rpx;
		font-family: Source Han Sans SC;
		font-weight: 400;
		color: #333333;
	}

	.popupButtonChoose {
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		padding: 30rpx;
	
	}

	.popupButtonChooseFont {
		font-size: 36rpx;
		font-family: Source Han Sans SC;
		font-weight: 400;
		color: #333333;
	}

	.popupButtonOk {
		width: 75%;
		margin-top: 50rpx;
		padding-top: 10rpx;
		padding-bottom: 10rpx;
		padding-left: 30rpx;
		padding-right: 30rpx;
		background-color: #FC6A6C;
		box-shadow: 0px 7px 38px 8px rgba(216, 48, 75, 0.15);
		border-radius: 12rpx;
	}
	
	.borderTextArea {
		background-color: #FFFFFF;
		border-color: #AAAAAA;
		border-width: 1rpx;
		border-radius: 12rpx;
		padding: 10rpx;
	}

	.popupButtonOkFont {
		font-size: 36rpx;
		font-family: Source Han Sans SC;
		font-weight: 400;
		color: #FFFFFF;
	}
</style>
